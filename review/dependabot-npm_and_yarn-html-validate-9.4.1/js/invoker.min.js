(()=>{function b(){return typeof HTMLButtonElement<"u"&&"command"in HTMLButtonElement.prototype&&"source"in((globalThis.CommandEvent||{}).prototype||{})}function g(){document.addEventListener("invoke",e=>{e.type=="invoke"&&e.isTrusted&&(e.stopImmediatePropagation(),e.preventDefault())},!0),document.addEventListener("command",e=>{e.type=="command"&&e.isTrusted&&(e.stopImmediatePropagation(),e.preventDefault())},!0);function v(e,t,o=!0){Object.defineProperty(e,t,{...Object.getOwnPropertyDescriptor(e,t),enumerable:o})}function s(e){return e&&typeof e.getRootNode=="function"?e.getRootNode():e&&e.parentNode?s(e.parentNode):e}let E=globalThis.ShadowRoot||function(){},d=new WeakMap,l=new WeakMap;class m extends Event{constructor(t,o={}){super(t,o);let{source:n,command:r}=o;if(n!=null&&!(n instanceof Element))throw new TypeError("source must be an element");d.set(this,n||null),l.set(this,r!==void 0?String(r):"")}get[Symbol.toStringTag](){return"CommandEvent"}get source(){if(!d.has(this))throw new TypeError("illegal invocation");let t=d.get(this);if(!(t instanceof Element))return null;let o=s(t);return o!==s(this.target||document)?o.host:t}get command(){if(!l.has(this))throw new TypeError("illegal invocation");return l.get(this)}get action(){throw new Error("CommandEvent#action was renamed to CommandEvent#command")}get invoker(){throw new Error("CommandEvent#invoker was renamed to CommandEvent#source")}}v(m.prototype,"source"),v(m.prototype,"command");class y extends Event{constructor(){throw new Error("InvokeEvent has been deprecated, it has been renamed to `CommandEvent`")}}let c=new WeakMap;function k(e){Object.defineProperties(e.prototype,{commandForElement:{enumerable:!0,configurable:!0,set(t){if(this.hasAttribute("invokeaction"))throw new TypeError("Element has deprecated `invokeaction` attribute, replace with `command`");if(this.hasAttribute("invoketarget"))throw new TypeError("Element has deprecated `invoketarget` attribute, replace with `commandfor`");if(t===null)this.removeAttribute("commandfor"),c.delete(this);else if(t instanceof Element){this.setAttribute("commandfor","");let o=s(t);s(this)===o||o===this.ownerDocument?c.set(this,t):c.delete(this)}else throw new TypeError("commandForElement must be an element or null")},get(){if(this.localName!=="button")return null;if(this.hasAttribute("invokeaction")||this.hasAttribute("invoketarget"))return console.warn("Element has deprecated `invoketarget` or `invokeaction` attribute, use `commandfor` and `command` instead"),null;if(this.disabled)return null;if(this.form&&this.getAttribute("type")!=="button")return console.warn("Element with `commandFor` is a form participant. It should explicitly set `type=button` in order for `commandFor` to work"),null;let t=c.get(this);if(t)return t.isConnected?t:(c.delete(this),null);let o=s(this),n=this.getAttribute("commandfor");return(o instanceof Document||o instanceof E)&&n&&o.getElementById(n)||null}},command:{enumerable:!0,configurable:!0,get(){let t=this.getAttribute("command")||"";if(t.startsWith("--"))return t;let o=t.toLowerCase();switch(o){case"show-modal":case"close":case"toggle-popover":case"hide-popover":case"show-popover":return o}return""},set(t){this.setAttribute("command",t)}},invokeAction:{enumerable:!1,configurable:!0,get(){throw new Error("invokeAction is deprecated. It has been renamed to command")},set(t){throw new Error("invokeAction is deprecated. It has been renamed to command")}},invokeTargetElement:{enumerable:!1,configurable:!0,get(){throw new Error("invokeTargetElement is deprecated. It has been renamed to command")},set(t){throw new Error("invokeTargetElement is deprecated. It has been renamed to command")}}})}let h=new WeakMap;Object.defineProperties(HTMLElement.prototype,{oncommand:{enumerable:!0,configurable:!0,get(){return p.takeRecords(),h.get(this)||null},set(e){let t=h.get(this)||null;t&&this.removeEventListener("command",t),h.set(this,typeof e=="object"||typeof e=="function"?e:null),typeof e=="function"&&this.addEventListener("command",e)}}});function u(e){for(let t of e)t.oncommand=new Function("event",t.getAttribute("oncommand"))}let p=new MutationObserver(e=>{for(let t of e){let{target:o}=t;t.type==="childList"?u(o.querySelectorAll("[oncommand]")):u([o])}});p.observe(document,{subtree:!0,childList:!0,attributeFilter:["oncommand"]}),u(document.querySelectorAll("[oncommand]"));function A(e){if(e.defaultPrevented||e.type!=="click")return;let t=e.target.closest("button[invoketarget], button[invokeaction], input[invoketarget], input[invokeaction]");if(t&&(console.warn("Elements with `invoketarget` or `invokeaction` are deprecated and should be renamed to use `commandfor` and `command` respectively"),t.matches("input")))throw new Error("Input elements no longer support `commandfor`");let o=e.target.closest("button[commandfor], button[command]");if(!o)return;if(this.form&&this.getAttribute("type")!=="button")throw e.preventDefault(),new Error("Element with `commandFor` is a form participant. It should explicitly set `type=button` in order for `commandFor` to work. In order for it to act as a Submit button, it must not have command or commandfor attributes");if(o.hasAttribute("command")!==o.hasAttribute("commandfor")){let i=o.hasAttribute("command")?"command":"commandfor",f=o.hasAttribute("command")?"commandfor":"command";throw new Error(`Element with ${i} attribute must also have a ${f} attribute to function.`)}if(o.command!=="show-popover"&&o.command!=="hide-popover"&&o.command!=="toggle-popover"&&o.command!=="show-modal"&&o.command!=="close"&&!o.command.startsWith("--")){console.warn(`"${o.command}" is not a valid command value. Custom commands must begin with --`);return}let n=o.commandForElement;if(!n)return;let r=new m("command",{command:o.command,source:o,cancelable:!0});if(n.dispatchEvent(r),r.defaultPrevented)return;let a=r.command.toLowerCase();if(n.popover){let i=!n.matches(":popover-open");i&&(a==="toggle-popover"||a==="show-popover")?n.showPopover({source:o}):!i&&a==="hide-popover"&&n.hidePopover()}else if(n.localName==="dialog"){let i=!n.hasAttribute("open");i&&a==="show-modal"?n.showModal():!i&&a==="close"&&n.close()}}function w(e){e.addEventListener("click",A,!0)}function S(e,t){let o=e.prototype.attachShadow;e.prototype.attachShadow=function(r){let a=o.call(this,r);return t(a),a};let n=e.prototype.attachInternals;e.prototype.attachInternals=function(){let r=n.call(this);return r.shadowRoot&&t(r.shadowRoot),r}}k(globalThis.HTMLButtonElement||function(){}),S(globalThis.HTMLElement||function(){},e=>{w(e),p.observe(e,{attributeFilter:["oncommand"]}),u(e.querySelectorAll("[oncommand]"))}),w(document),Object.defineProperty(window,"CommandEvent",{value:m,configurable:!0,writable:!0}),Object.defineProperty(window,"InvokeEvent",{value:y,configurable:!0,writable:!0})}b()||g();})();
