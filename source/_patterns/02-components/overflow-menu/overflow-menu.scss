@use "../../../css/partials.meta";
@use "overflow-menu.variables";
@use "@db-ui/base/build/scss/variables";
@use "../../../css/db-ui-core.variables";
@use "../../../css/helpers/functions";
@use "../../00-base/icons/icons.helpers";

.cmp-overflow-menu {
	color: #2d333f; // TODO: replace by correct color
	display: inline-block;
	position: relative;

	&:not(.is-account) {
		summary {
			@include icons.is-icon-text-replace();
		}
	}

	summary {
		display: inline-flex;
		align-items: center;
		padding: 0.5rem 0.75rem;
		border-radius: 4px;
		cursor: default;

		background-color: rgba(variables.$db-color-cool-gray-700, 0);

		& {
			@include icons.icon(
				overflow-menu.$cmp-overflow-menu-icon,
				20,
				"outline",
				$partial: partials.$partial
			);
		}

		&::before {
			transform: translateX(-#{functions.to-rem($pxValue: 2)});
		}

		&:hover {
			background-color: rgba(variables.$db-color-cool-gray-700, 0.08);
		}

		&:active {
			background-color: rgba(variables.$db-color-cool-gray-700, 0.16);
		}

		&::-webkit-details-marker {
			display: none;
		}
		// â€¦ and using some other declaration for mozilla firefox
		&:first-of-type {
			list-style-type: none;
		}
	}

	// Menu list
	menu,
	ul {
		background-color: overflow-menu.$overflowMenu---backgroundColor;

		border-radius: overflow-menu.$overflowMenu---borderRadius;
		filter: drop-shadow(db-ui-core.$box-shadow);
		margin-block-start: 1rem;
		padding-left: 0;
		position: absolute;
		width: min-content;
		z-index: db-ui-core.$z-index-cmp-overflow-menu-menu;

		// Little triangle on the overlay
		&::before {
			border-bottom: overflow-menu.$overflowMenu-triangle--borderSize solid
				overflow-menu.$overflowMenu---backgroundColor;
			border-left: overflow-menu.$overflowMenu-triangle--borderSize solid transparent;
			border-right: overflow-menu.$overflowMenu-triangle--borderSize solid transparent;
			content: "";
			height: 0;
			position: absolute;
			transform: translate(
				functions.to-rem($pxValue: 12),
				-#{functions.to-rem($pxValue: 13)}
			);
			width: 0;
		}

		li {
			button,
			a {
				background-color: overflow-menu.$overflowMenu---backgroundColor;

				border-radius: unset;
				display: block;

				font-weight: 400;
				padding: functions.to-rem($pxValue: 16) functions.to-rem($pxValue: 32)
					functions.to-rem($pxValue: 16) functions.to-rem($pxValue: 16); // TODO: replace by correct spacings

				text-decoration: none;

				&:hover,
				&:focus {
					background-color: overflow-menu.$overflowMenu-item-hover-backgroundColor;
					color: inherit;
				}
			}

			&:first-child {
				button,
				a {
					border-top-left-radius: overflow-menu.$overflowMenu---borderRadius;
					border-top-right-radius: overflow-menu.$overflowMenu---borderRadius;
				}
			}

			&:last-child {
				button,
				a {
					border-bottom-left-radius: overflow-menu.$overflowMenu---borderRadius;
					border-bottom-right-radius: overflow-menu.$overflowMenu---borderRadius;
				}
			}
		}
	}

	&[data-horizontal-position="opposite"] {
		menu,
		ul {
			right: 0;

			&::before {
				right: 0;
				transform: translate(
					-#{functions.to-rem($pxValue: 12)},
					-#{functions.to-rem($pxValue: 13)}
				);
			}
		}
	}

	menu {
		list-style-type: ""; // Disable list style type, but prevent postcss-list-style-safari-fix transformation

		li {
			overflow-x: hidden;
		}

		button {
			line-height: inherit;
			text-align: left;
			width: 100%;
		}
	}

	// Achieving a full viewport clickarea for closing the overflow menu
	&[open] summary::after {
		content: "\00A0";
		display: inline-block;
		height: 100vh;
		left: 0;
		position: fixed;
		top: 0;
		width: 100vw;
		z-index: db-ui-core.$z-index-cmp-overflow-menu-overlay;
	}
}
