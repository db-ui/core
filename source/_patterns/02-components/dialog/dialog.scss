@use "../../../css/partials.meta";
@use "dialog.variables";
@use "@db-ui/base/build/scss/variables";
@use "../../../css/helpers/functions";
@use "../../00-base/icons/icons.helpers";

.cmp-dialog {
	border: 0;
	border-radius: 8px;

	color: variables.$db-color-cool-gray-700;

	font-size: functions.to-rem($pxValue: 14);
	margin-top: 0;
	max-width: 90vw;

	padding: functions.to-rem($pxValue: 16); // TODO: replace by general spacing variables

	// Display the dialog fixed within the middle of the screen (actually some overwrites for the dialog-polyfill CSS)
	position: fixed;
	top: 50%;
	transform: translate(0, -50%);
	@media screen and (min-width: 768px) {
		// TODO: replace by correct general breakpoint variables
		padding: functions.to-rem(
			$pxValue: 24
		); // TODO: replace by general spacing variables
	}
	// Defining the backdrop colors

	// * native
	&::backdrop {
		background-color: dialog.$dialog-backdrop--backgroundColor;
	}

	// * polyfill
	& + .backdrop {
		background-color: dialog.$dialog-backdrop--backgroundColor;
	}

	// Display the modal via CSS as a no-javascript fallback
	&:target {
		.no-js & {
			display: initial;
		}
	}

	header {
		color: variables.$db-color-cool-gray-800;

		transform: translateY(-#{functions.to-rem($pxValue: 9)});

		.elm-headline {
			font-size: functions.to-rem($pxValue: 18);
			font-weight: 700;
			line-height: functions.to-rem(
				$pxValue: 24
			); // TODO: Check whether this is a settting that should be more global
			margin-bottom: functions.to-rem($pxValue: 6);
			margin-right: functions.to-rem($pxValue: 24);
			// Remove the headlines margin-top, as we're in a dialog that has a padding on it's own
			margin-top: 0;

			text-align: center;
			@media screen and (min-width: 768px) {
				// TODO: replace by correct general breakpoint variables
				font-size: functions.to-rem($pxValue: 24);
				line-height: functions.to-rem(
					$pxValue: 28
				); // TODO: Check whether this is a settting that should be more global
			}
		}

		:is(.elm-link, button) {
			&.is-close {
				position: absolute;
				right: 0;
				top: 0;

				background-color: transparent;
				border-color: transparent;

				& {
					@include icons.icon(
						icons.glyph(close),
						24,
						"outline",
						$partial: partials.$partial
					);
					@include icons.is-icon-text-replace();
				}
			}
		}
	}

	main {
		p {
			&:first-child {
				margin-top: 0;
			}
		}
	}

	footer {
		display: flex;
		margin-top: functions.to-rem($pxValue: 18);

		.elm-button {
			& + .elm-button {
				margin-left: functions.to-rem(
					$pxValue: 16
				); // TODO: Replace by spacing variable
			}
		}

		&[data-alignment="end"] {
			justify-content: flex-end;
		}

		&:not([data-alignment="end"]) {
			.elm-button {
				flex-grow: 1;
			}
		}
	}
}
