@charset "utf-8";

@import "button.variables";

.elm-button {
	// Including a loading indicator
	--loadingIndicator---color: currentColor;

	$icon-size: var(--db-icon-size, 20);
	align-items: center; // Centering the content vertically and horizontally

	border: 1px solid transparent;
	border-radius: 4px;
	display: inline-flex;

	font-weight: 700;
	justify-content: center;
	min-height: $db-sizing-md;
	padding: $db-spacing-fixed-xs $db-spacing-fixed-md;

	text-align: center;

	// Changing background-color on hover should be animated by a transition
	transition: background-color
		var(--db-transition-color, #{$db-transition-color});

	&[data-icon],
	&[data-icon-before] {
		padding-left: $db-spacing-fixed-xs;

		&::before {
			--icon-font-family: var(--db-base-icon-font-family);
			--icon-font-size: var(--db-base-icon-font-size);
		}
	}

	&[data-icon-after] {
		padding-right: $db-spacing-fixed-xs;

		&::after {
			--icon-font-family: var(--db-base-icon-font-family);
			--icon-font-size: var(--db-base-icon-font-size);
		}
	}
	// Square icon only buttons
	&.is-icon-text-replace {
		padding: 0;
		width: $db-sizing-md;
	}

	&:not([data-variant]),
	&[data-variant="primary"] {
		@extend %db-bg-primary-ia;
	}

	&%variant-secondary {
		background-color: $db-colors-neutral-bg-transparent-full-enabled;
		border: solid 1px
			var(--db-current-color, $db-colors-neutral-on-bg-enabled);
		color: var(--db-current-color, $db-colors-neutral-on-bg-enabled);

		&:not(:disabled) {
			&:hover {
				background-color: $db-colors-neutral-bg-transparent-full-hover;
			}

			&:active {
				background-color: $db-colors-neutral-bg-transparent-full-pressed;
			}
		}
	}

	&%variant-tertiary {
		background-color: $db-colors-neutral-bg-transparent-semi-enabled;
		color: var(--db-current-color, $db-colors-neutral-on-bg-enabled);

		&:not(:disabled) {
			&:hover {
				background-color: $db-colors-neutral-bg-transparent-semi-hover;
			}

			&:active {
				background-color: $db-colors-neutral-bg-transparent-semi-pressed;
			}
		}
	}

	&%variant-ghost {
		background-color: $db-colors-neutral-bg-transparent-full-enabled;
		color: var(--db-current-color, $db-colors-neutral-on-bg-enabled);

		&:not(:disabled) {
			&:hover {
				background-color: $db-colors-neutral-bg-transparent-full-hover;
			}

			&:active {
				background-color: $db-colors-neutral-bg-transparent-full-pressed;
			}
		}
	}

	// Sizes

	&%size-Small {
		min-height: $db-sizing-sm;
		padding: $db-spacing-fixed-3xs $db-spacing-fixed-sm;

		// Square icon only buttons
		&.is-icon-text-replace {
			width: $db-sizing-sm;
		}
	}

	&[data-size="small"] {
		@extend %size-Small;
	}

	// Width
	&%width-Full {
		width: 100%;
	}

	&[data-width="full"] {
		@extend %width-Full;
	}

	// Providing the variants as HTML attributes as well

	&[data-variant="secondary"] {
		@extend %variant-secondary;
	}

	&[data-variant="tertiary"] {
		@extend %variant-tertiary;
	}

	&[data-variant="ghost"] {
		@extend %variant-ghost;
	}

	&:disabled {
		opacity: 0.25;
	}

	// States (currently only "loading")
	&[data-state="loading"] {
		@include is-icon-text-replace();

		&::before {
			content: "";
		}
	}

	&[data-state="loading"] {
		font-size: 0;
	}
}
