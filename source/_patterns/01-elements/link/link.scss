@use "@db-ui/base/build/scss/variables" as *;
@use "@db-ui/base/build/scss/scaling-placeholder" as *;
@use "@db-ui/base/build/scss/color-placeholder" as *;
@use "@db-ui/base/build/scss/helpers/functions" as *;
@use "@db-ui/base/build/scss/icon/icons.helpers" as *;

@import "../../../css/partials.meta";

.elm-link {
	color: var(--db-current-color, $db-colors-neutral-on-bg-enabled);
	display: inline-block;
	border-radius: to-rem($pxValue: 6);

	// Link underline
	text-underline-offset: to-rem($pxValue: 1);
	text-underline-position: under;
	text-decoration-thickness: to-rem($pxValue: 1);
	@supports (text-underline-offset: 3px) {
		text-underline-position: auto;
	}

	// Changing color on hover should be animated by a transition
	transition: $db-transition-color;

	&:hover {
		color: inherit;
	}

	// "disabled" links
	&[aria-disabled="true"] {
		opacity: var(--db-disabled-text-opacity, 0.5);

		pointer-events: none;

		&::before {
			color: initial;
		}
	}

	&[data-content] {
		--icon-font-family: var(--db-base-icon-font-family);
		--icon-font-size: var(--db-base-icon-font-size);
	}

	&[data-content="internal"] {
		@include icon(glyph(link), 24, "outline", "after");
	}

	&[data-content="external"] {
		@include icon(glyph(link-external), 24, "outline", "after");
	}

	&[data-content="internal"],
	&[data-content="external"] {
		&::after {
			--icon-margin-before: var(--db-spacing-fixed-2xs);
			margin-top: -3px;
		}

		&:focus-visible {
			outline-offset: -1px;
			padding: 0 2px;
		}
	}

	&[data-variant="primary"] {
		@extend %db-primary-text-ia;
	}

	// data-size=small is defined by tonality in "@db-ui/base/build/scss/tonality"
	&[data-size="small"] {
		&[data-content="internal"],
		&[data-content="external"] {
			&::after {
				--icon-margin-before: var(--db-spacing-fixed-3xs);
			}
		}
	}
}
